{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "MongoDB OpsManager backup node",
  "Parameters": {
    "KeyName": {
      "Description": "The EC2 Key Pair to allow SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "Stage": {
      "Description": "Environment name",
      "Type": "String",
      "AllowedValues": [
        "CODE",
        "QA",
        "RELEASE",
        "PROD"
      ]
    },
    "InstanceType": {
      "Description": "The instance type for the backup node(s) (typically smaller for prePROD)",
      "Type": "String",
      "AllowedValues": [
        "m3.medium",
        "m4.large",
        "m4.xlarge",
        "r3.xlarge"
      ]
    },
    "Stack": {
      "Description": "Stack name",
      "Type": "String"
    },
    "SshKeyFileS3Url": {
      "Description": "S3 URL for a list of public SSH keys to use for the default ubuntu user",
      "Type": "String",
      "Default": ""
    },
    "SSHAccessCIDR": {
      "Description": "IP address range allowed to SSH to the backup instances",
      "Type": "String",
      "Default": "10.249.0.0/16"
    },
    "EBSOptions": {
      "Description": "Extra parameters to add-encrypted script",
      "Type": "String",
      "Default": "-t gp2"
    },
    "BackupVolumeSize": {
      "Description": "Size of EBS volume for backup files (GB)",
      "Type": "Number",
      "Default": "300"
    },
    "VpcId": {
      "Description": "ID of the VPC onto which to launch the application eg. vpc-1234abcd",
      "Type": "AWS::EC2::VPC::Id"
    },
    "PrivateVpcSubnets": {
      "Description": "Subnets to use in VPC for private EC2 instances eg. subnet-abcd1234",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "MachineImagesAMI": {
      "Description": "AMI id from the machine-images repo",
      "Type": "String"
    },
    "Size": {
      "Description": "Size of ASG",
      "Type": "Number",
      "Default": "1"
    },
    "CustomerMasterKey": {
      "Description": "The KMS CMK to use to encrypt the EBS volume",
      "Type": "String"
    },
    "SnapshotBackupBucketName": {
      "Description": "Bucket to store backup snapshots in",
      "Type": "String",
      "Default": "flex-mongo-snapshots-backup"
    },
    "SnapshotBackupPublicKeysBucketName": {
      "Description": "Bucket to store team public keys in (used to encrypt backup)",
      "Type": "String",
      "Default": "flex-mongo-snapshots-backup-public-keys"
    },
    "PagerDutyServiceKey" : {
      "Description": "A service key so that alarms can be sent if the backup job is not running",
      "Type": "String"
    }
  },
  "Conditions" : {
    "DoNotRetrieveSshKeysFromS3" : {
      "Fn::Equals" : [ {"Ref" : "SshKeyFileS3Url"}, "" ]
    }
  },
  "Resources": {
    "ServerInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "ServerRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "DescribeEC2Policy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "DescribeEC2Policy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "EC2:Describe*",
                "elasticloadbalancing:Describe*"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "cloudformation:DescribeStacks"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "AWS::StackId"
              }
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "CreateEncryptedVolumePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CreateEncryptedVolumePolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ec2:CreateVolume",
                "ec2:AttachVolume",
                "ec2:CreateTags",
                "ec2:DescribeTags",
                "ec2:DescribeVolumes",
                "ec2:ModifyInstanceAttribute"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "kms:CreateGrant",
                "kms:GenerateDataKeyWithoutPlaintext",
                "kms:Decrypt"
              ],
              "Effect": "Allow",
              "Resource": { "Ref": "CustomerMasterKey"}
            }
          ]
        },
        "Roles": [{"Ref": "ServerRole"}]
      }
    },
    "GetBackupKeysPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "GetBackupKeysPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:GetObject"
              ],
              "Resource": [{
                  "Fn::Join": [
                    "",
                    [ "arn:aws:s3:::", { "Ref": "SnapshotBackupPublicKeysBucketName" }, "/*" ]
                  ]
                }]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "UploadBackupPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "UploadBackupPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "s3:PutObject"
              ],
              "Resource": [{
                "Fn::Join": ["", ["arn:aws:s3:::", { "Ref": "SnapshotBackupBucketName" }, "/*" ] ]
              }]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "PushLogsPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "PushLogs",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "LockTablePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "LockTable",
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:CreateTable",
                "dynamodb:PutItem",
                "dynamodb:GetItem",
                "dynamodb:UpdateItem"
              ],
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/mongo-initialisation"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:dynamodb:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":table/mongo.rsconfig.",
                      {
                        "Ref": "Stack"
                      },
                      "-db-",
                      {
                        "Ref": "Stage"
                      }
                    ]
                  ]
                }
              ]
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "CloudwatchPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "CloudwatchPolicy",
        "PolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "cloudwatch:PutMetricData"
              ],
              "Resource": "*"
            }
          ]
        },
        "Roles": [
          {
            "Ref": "ServerRole"
          }
        ]
      }
    },
    "SSHSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Allow SSH access from the office",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": { "Ref": "SSHAccessCIDR" }
          }
        ]
      }
    },
    "AutoscalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "VPCZoneIdentifier": {
          "Ref": "PrivateVpcSubnets"
        },
        "LaunchConfigurationName": {
          "Ref": "LaunchConfig"
        },
        "MinSize": 1,
        "MaxSize": {
          "Ref": "Size"
        },
        "DesiredCapacity": {
          "Ref": "Size"
        },
        "Cooldown": "180",
        "HealthCheckType": "EC2",
        "HealthCheckGracePeriod": 300,
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "Stage"
                  },
                  ":",
                  {
                    "Ref": "Stack"
                  },
                  "-db_backup"
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Stage",
            "Value": {
              "Ref": "Stage"
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Stack",
            "Value": { "Ref" : "Stack" },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "App",
            "Value": "db_backup",
            "PropagateAtLaunch": "true"
          }
        ]
      }
    },
    "SnapshotBackupS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": {"Ref": "SnapshotBackupBucketName"},
        "LifecycleConfiguration": {
          "Rules": [{
              "ExpirationInDays": 7,
              "Status": "Enabled"
            }]
        }
      }
    },
    "TeamKeysS3Bucket": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Properties": {
        "BucketName": {"Ref": "SnapshotBackupPublicKeysBucketName"}
      }
    },
    "LaunchConfig": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "KeyName": {
          "Ref": "KeyName"
        },
        "ImageId": {
          "Ref": "MachineImagesAMI"
        },
        "SecurityGroups": [
          {
            "Ref": "SSHSecurityGroup"
          }
        ],
        "InstanceType": {"Ref": "InstanceType"},
        "IamInstanceProfile": {
          "Ref": "ServerInstanceProfile"
        },
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "\n",
              [
                "#!/bin/bash -ev",

                { "Fn::Join": [ "", ["/opt/features/pagerduty/install.sh -k ", {"Ref": "PagerDutyServiceKey"}] ]},

                { "Fn::If" : [
                    "DoNotRetrieveSshKeysFromS3",
                    "# Not retrieving SSH keys from S3",
                    { "Fn::Join": [ "", ["/opt/features/ssh-keys/install.sh -k ", { "Ref": "SshKeyFileS3Url" }, " -u ubuntu", "\n" ]] }
                  ]
                },
                { "Fn::Join": [ "", ["/opt/features/ebs/add-encrypted.sh -s ", {"Ref":"BackupVolumeSize"}, " -d f -m /backup -o 'defaults,noatime' -x ", {"Ref":"EBSOptions"}, " -k ", { "Ref": "CustomerMasterKey" }] ] },

                "/opt/features/mongo-opsmanager/backup-agent-configure.sh",
                { "Fn::Join": [ "", ["echo '/opt/features/alarming-crontab/install.sh -u ubuntu -d 'Snapshot backup cron task' -c '*/30 * * * * /opt/features/mongo-opsmanager/scripts/snapshot_backup.rb -b ", {"Ref":"SnapshotBackupBucketName"}, " -k ", { "Ref": "SnapshotBackupPublicKeysBucketName" }, "'' > /opt/features/mongo-opsmanager/backup-agent-cron-job.txt"] ] },
                "crontab -u mongo-backup /opt/features/mongo-opsmanager/backup-agent-cron-job.txt"
              ]
            ]
          }
        }
      }
    }
  }
}
